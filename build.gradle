plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

def compileJavaVersion = "8"
def testJavaVersion = project.findProperty("testJavaVersion") ?: compileJavaVersion
def jvmVendor = null
logger.lifecycle("Compiling for Java ${compileJavaVersion} and later, testing against Java ${testJavaVersion}")

subprojects { subproject ->
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'com.github.johnrengelman.shadow'

    group = "com.github.therapi"
    version = "0.13.0-SNAPSHOT"

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'com.eclipsesource.minimal-json:minimal-json:0.9.5'
        testImplementation 'junit:junit:4.13.2'
    }

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(compileJavaVersion)
            vendor = jvmVendor
        }
    }

    tasks.withType(Test) {
        testLogging.showStandardStreams = true
        javaLauncher = javaToolchains.launcherFor {
            languageVersion = JavaLanguageVersion.of(testJavaVersion)
            vendor = jvmVendor
        }
    }

    shadowJar {
        archiveClassifier.set('')
        mergeServiceFiles()
        relocate 'com.eclipsesource', 'com.github.therapi.runtimejavadoc.repack.com.eclipsesource'
    }

    task sourceJar(type: Jar, dependsOn: classes) {
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        from javadoc.destinationDir
    }

    project.ext.gitProjectName = project.name
    def gitUrl = "git@github.com:dnault/${project.ext.gitProjectName}.git"
    project.ext.pomConfig = {
        name "${group}:${project.name}"
        url "https://github.com/dnault/${project.ext.gitProjectName}"
        scm {
            url "${gitUrl}"
            connection "scm:git:${gitUrl}"
            developerConnection "scm:git:${gitUrl}"
        }
        licenses {
            license {
                name 'Apache License 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            }
        }
        developers {
            developer {
                name 'David Nault'
                email 'dnault@mac.com'
                organization 'dnault'
                organizationUrl 'https://github.com/dnault'
            }
        }
    }

    task install {
        dependsOn(publishToMavenLocal)
    }

}
